# Describes an automatic update with PDM using gitlab actions
# source https://gist.github.com/carstencodes/bdf6c1664f49f387b6994a02965e787c

name: Automatic update released versions
on:
  schedule:
    - cron:  '0 10 * * 1-5' # Each weekday at 10 am
  workflow_dispatch: # Do nothing at all
jobs:
  auto-update:
    name: Perform automatic update
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout this repository
        uses: actions/checkout@v3
      # Install PDM
      - uses: pdm-project/setup-pdm@main
        name: Setup PDM
        with:
          python-version: "3.10"
          architecture: x64
          prerelease: true
          enable-pep582: false
      # Install dependencies in the first place
      - name: Install dependencies from pdm.lock
        env:
          PDM_USE_VENV: True
        run: pdm sync --no-isolation --no-self -G online -G test -G doc
      # Update Packages
      - name: Update dependencies to latest versions
        id: pdm_update
        run: |
          message=$(pdm update)
          # Preserve whitespace characters 
          message="${message//'%'/'%25'}" 
          message="${message//$'\n'/'%0A'}"
          message="${message//$'\r'/'%0D'}"
          echo ::set-output name=message::${message} 
      # Check if lock file has been modified
      - name: Get all files changed
        id: changed_files
        run: |
          modified_version_files=$(git status --porcelain --untracked-files=no pdm.lock | sed 's/^ M //g')
          echo ::set-output name=modified_files::${modified_version_files}
          if [ -n "${modified_version_files}" ];
          then
            echo ::set-output name=any_modified::true
          else
            echo ::set-output name=any_modified::false
          fi
      # Create a new pull request, if changed files are present
      - name: Commit and create Pull request
        id: create-pr
        uses: peter-evans/create-pull-request@v4 # Refer to marketplace for documentation
        if: ${{ steps.changed_files.outputs.any_modified == 'true' }}
        with:
          base: master
          add-paths: |
            pdm.lock
          commit-message: "dep: Updating dependent packages"
          signoff: false
          branch: auto-update/dependencies
          delete-branch: true
          title: "Automatic update of dependent packages"
          body: ${{ steps.pdm_update.outputs.message }}
